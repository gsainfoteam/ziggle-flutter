default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :internal do
    setup_ci if ENV['CI']
    sync_code_signing(type: "appstore", readonly: true)
    app_store_connect_api_key(duration: 1200) if ENV['CI']

    pubspec = YAML.load_file("../../pubspec.yaml")
    version = pubspec["version"]
    build_number = latest_testflight_build_number + 1
    version_string = "#{version} (#{build_number})"
    name = get_info_plist_value(path: "./Runner/Info.plist", key: "CFBundleName")
    UI.message("Building #{name} #{version_string}")

    exportOptionsFilePath = "#{Tempfile.new('exportOptions').path}.plist"
    File.write(exportOptionsFilePath, {
      method: "app-store",
      uploadBitcode: false,
      provisioningProfiles: (lane_context[SharedValues::MATCH_PROVISIONING_PROFILE_MAPPING] if ENV['CI']),
    }.compact.to_plist)

    sh(
      "flutter", "build", "ipa",
      "--obfuscate",
      "--split-debug-info=debug-info",
      "--release",
      "--build-number=#{build_number}",
      "--export-options-plist=#{exportOptionsFilePath}",
    )
    upload_to_testflight(
      ipa: "../build/ios/ipa/#{name}.ipa",
      skip_waiting_for_build_processing: ENV['CI'],
    )
    slack(
      payload: {
        "Build Date" => Time.now.to_s,
        "Build Number" => build_number,
      }
    ) if ENV['CI']
    Dir["../../debug-info/*.symbols"].each do |file_path|
      upload(file_path, version_string)
    end if ENV['CI']
  end

  def upload(file_path, version_string)
    sh(
      "curl",
      "https://slack.com/api/files.upload",
      "-F", 'token="' + ENV["SLACK_BOT_TOKEN"] + '"',
      "-F", 'channels="' + ENV["SLACK_CHANNEL"] + '"',
      "-F", 'title="' + File.basename(file_path) + ' for ' + version_string + '"',
      "-F", 'filename="' + File.basename(file_path) + '"',
      "-F", 'file=@' + file_path,
    )
  end
end
